*************************************************************
					Backbone View
*************************************************************

    SearchView = Backbone.View.extend({
        initialize: function(){
            alert("Alerts suck.");
        }
    });

    // The initialize function is always called when instantiating a Backbone View.
    // Consider it the constructor of the class.
    var search_view = new SearchView();
	
	
	The "el" property:
	------------------
	<div id="search_container"></div>

	<script type="text/javascript">
		SearchView = Backbone.View.extend({
			initialize: function(){
				alert("Alerts suck.");
			}
		});
		
		var search_view = new SearchView({ el: $("#search_container") });
	</script>
	
	Loading a template:
	-------------------
	<script type="text/template" id="search_template">
	  <label>Search</label>
	  <input type="text" id="search_input" />
	  <input type="button" id="search_button" value="Search" />
	</script>

	<div id="search_container"></div>

	<script type="text/javascript">
		SearchView = Backbone.View.extend({
			initialize: function(){
				this.render();
			},
			render: function(){
				// Compile the template using underscore
				var template = _.template( $("#search_template").html(), {} );
				// Load the compiled HTML into the Backbone "el"
				this.$el.html( template );
			}
		});
		
		var search_view = new SearchView({ el: $("#search_container") });
	</script>
	
	
	Listening for events:
	---------------------
	<script type="text/template" id="search_template">
	  <label>Search</label>
	  <input type="text" id="search_input" />
	  <input type="button" id="search_button" value="Search" />
	</script>

	<div id="search_container"></div>

	<script type="text/javascript">
		SearchView = Backbone.View.extend({
			initialize: function(){
				this.render();
			},
			render: function(){
				var template = _.template( $("#search_template").html(), {} );
				this.$el.html( template );
			},
			events: {
				"click input[type=button]": "doSearch"
			},
			doSearch: function( event ){
				// Button clicked, you can access the element that was clicked with event.currentTarget
				alert( "Search for " + $("#search_input").val() );
			}
		});

		var search_view = new SearchView({ el: $("#search_container") });
	</script>



